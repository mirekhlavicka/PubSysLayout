@inject HttpClient Http
@inject IJSRuntime js
@inject NavigationManager uriHelper
@inject MudBlazor.ISnackbar snackBar
@inject IDialogService DialogService
@using PubSysLayout.Shared.SQLCatalog
@using TinyMCE.Blazor

<style>
    .tox-tinymce-aux {
        z-index: 110000;
    }
</style>

<MudDialog DefaultFocus="DefaultFocus.FirstChild">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Image" Class="mr-3 mb-n1"/>
            @MudDialog.Title
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @ref="form" @bind-IsValid="@canSave">
@*             <MudTextField Variant="@Variant.Outlined" T="string" @bind-Value="FileInfo.Description"
                            Label="Description" 
                            Lines="5" Required="false" />
            <MudTextField Variant="@Variant.Outlined" T="string" @bind-Value="FileInfo.Licence"
                            Label="Licence"
                            Lines="5" Required="false" Class="mt-4" /> *@

            <MudText Typo="Typo.caption">Description</MudText>
            <Editor ScriptSrc="/lib/tinymce/tinymce.min.js" Conf="@editorConf" Inline="false" @bind-Value="FileInfo.Description" />

            <MudText Typo="Typo.caption">Licence</MudText>
            <Editor ScriptSrc="/lib/tinymce/tinymce.min.js" Conf="@editorConf" Inline="false" @bind-Value="FileInfo.Licence" />

        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Variant="Variant.Filled">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="OK" Disabled="@(false/*!canSave*/)" Variant="Variant.Filled" accesskey="s"  Class="mr-5">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public FileInfo FileInfo { get; set; }

    MudForm form;
    bool canSave = false;

    // protected async override Task OnInitializedAsync()
    // {
    //     //await LoadData();
    // }

    private Dictionary<string, object> editorConf = new Dictionary<string, object>{
    {"language" , "cs"},
    { "plugins", "link code" },
    {"toolbar", "undo redo | bold italic | link | code"}, /*underline*/
    //{"width", 400},
    {"height", 200},
    {"menubar", ""},
    {"promotion", false},
    {"statusbar", false}
    //{"forced_root_block", ""},
    //{"force_p_newlines", false}
  };


    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async void OK()
    {
        await form.Validate();

        if (!form.IsValid)
        {
            return;
        }

        MudDialog.Close(FileInfo);
    }
}
