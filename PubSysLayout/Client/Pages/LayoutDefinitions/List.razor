@page "/layoutdefinitions"
@inject HttpClient Http
@using PubSysLayout.Shared.Model

<PageTitle>Layout definitions</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Layout definitions</MudText>
<MudText Class="mb-8">This component demonstrates fetching data from the server.</MudText>
@if (layoutDefinitions == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="layoutDefinitions" Hover="true" SortLabel="Sort By" Elevation="0" RowsPerPage="50">
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<LayoutDefinition, object>(x=>x.IdLayoutdefinition)">ID</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<LayoutDefinition, object>(x=>x.Name)">Name</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="ID">@context.IdLayoutdefinition</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{10, 50, 100, 500}" />
        </PagerContent>
    </MudTable>
}

@code {
    private LayoutDefinition[] layoutDefinitions;

    protected override async Task OnInitializedAsync()
    {
        layoutDefinitions = await Http.GetFromJsonAsync<LayoutDefinition[]>("api/layoutdefinitions");
    }
}
